import Notification from '../src/model/notificationModel';
import notesusers from '../src/model/signupModel';
import mongoose from 'mongoose';
import app from '../src/app';
import request from 'supertest';
import jwt from 'jsonwebtoken';
import {
  startConnection,
  clearConnectedDatabase,
  closeDatabaseConnection,
} from '../mongodb_memory_server/database_memory';
import sendEmail from '../src/nodemailer'
import {beforeAll, afterEach, afterAll, describe, test, expect} from "@jest/globals";

// Connect to database memory before running any tests.
beforeAll(async () => await startConnection());
afterEach(async () => await clearConnectedDatabase());
afterAll(async () => await closeDatabaseConnection());


    
describe('TEST FOR ENDPOINT: FORGOT PASSWORD ROUTE - POST /password/recovery-email', () => {
    // test("if email not exist in database", async () => {
    //         await request(app)
    //     .post(`/users/recovery-email`)
    //     .send({
    //       "email": "chidimmaifeh@gmail.com"
    //     })
    //     .expect(404)
    // });
    
    test('User should be able to reset Password if email exist', async () => {
        const cre = await Notification.create({
            content: "You have been added as a contributor to this note note one",
            noteId: "6159ac744343524862a5660b",
            userId: "615a29bfae867c5f139b328d"
        })
    const data = await Notification.findById(cre.id)
    if(data){
        expect(data._id).toStrictEqual(cre._id)
    }

    });

    test("password change for valid user with correct old password", async ()=>{
       const newUser =  { 
           firstName:"Emmanuel", 
           lastName:"Emenike", 
           email:"emmanuel@gmail.com", 
           password:"decagon", 
           confirm_password :"decagon"
        }
        let gb= await notesusers.create(newUser)
        // expect(gb).toBe(3)
        // console.log(gb)

         await request(app)
            .post("/users/login")
            .send({
                "email": "chidimmaifeh@gmail.com",
                "password":"1234567890"
            })

// console.log(te);

        let bnm = await request(app)
                .get("/notes/getnotification")
                // .expect(302)

        console.log(bnm.text)
        expect(bnm.text).toStrictEqual([])
                
    });
    
    
});






